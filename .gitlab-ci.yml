stages:
  - release

release_project_script:
  stage: release
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG   # only run on tags
  before_script:
    - apk add --no-cache curl jq
    - echo "ðŸ”‘ Testing GitLab token inside CI..."
    - |
      curl --fail --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}" \
        || (echo "Invalid or unauthorized token in CI" && exit 1)
  script:
    - echo "ðŸ“¦ Attaching priv/scripts/create_project.exs to release $CI_COMMIT_TAG"

    # Upload file
    - |
      curl --request POST \
        --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        --form "file=@priv/scripts/create_project.exs" \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/uploads" \
        | tee upload.json
    - FILE_URL=$(jq -r .url upload.json)

    # Create release
    - |
      curl --request POST \
        --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        --header "Content-Type: application/json" \
        --data "{
          \"name\": \"Release $CI_COMMIT_TAG\",
          \"tag_name\": \"$CI_COMMIT_TAG\",
          \"assets\": {
            \"links\": [
              {
                \"name\": \"create_project.exs\",
                \"url\": \"${CI_PROJECT_URL}${FILE_URL}\"
              }
            ]
          }
        }" \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases"